{"version":3,"file":"template/view.js","mappings":"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","sources":["webpack://@prc/facets-blocks/external import \"@wordpress/interactivity-router\"","webpack://@prc/facets-blocks/webpack/bootstrap","webpack://@prc/facets-blocks/./src/template/view.js"],"sourcesContent":["module.exports = import(\"@wordpress/interactivity-router\");;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","/**\n * WordPress Dependencies\n */\nimport {\n\tstore,\n\tgetContext,\n\tgetServerState,\n\twithSyncEvent,\n\tgetElement,\n} from '@wordpress/interactivity';\n\n/**\n * Internal Dependencies\n */\nconst { addQueryArgs } = window.wp.url;\n\nfunction formatCount(count) {\n\treturn 250 <= count ? '250+' : count;\n}\n\nfunction getPropertyFromObjects(property, searchValue, values) {\n\tconst choice = values.find((c) => c.value === searchValue);\n\treturn choice ? choice[property] : null;\n}\n\nconst { state, actions } = store('prc-platform/facets-context-provider', {\n\tstate: {\n\t\tmouseEnterPreFetchTimer: 500,\n\t\tnavigateTimer: 1000,\n\t\tepSortByDate: false,\n\t\tisProcessing: false,\n\t\tget hasPosts() {\n\t\t\treturn state?.pagination?.total_rows > 0;\n\t\t},\n\t\tget postCount() {\n\t\t\treturn state?.pagination?.total_rows || 0;\n\t\t},\n\t\tget getServerSelected() {\n\t\t\treturn getServerState().selected;\n\t\t},\n\t\tget getUpdatedUrl() {\n\t\t\tif (undefined === state.selected) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\treturn actions.constructNewUrl(state.selected);\n\t\t},\n\t\tget choices() {\n\t\t\tconst context = getContext();\n\t\t\tconst { facetSlug, limit, facetType } = context;\n\t\t\tif (!facetSlug) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tif (!state.facets[facetSlug]) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tif ('dropdown' === facetType) {\n\t\t\t\treturn [...state.facets[facetSlug].choices].sort((a, b) => {\n\t\t\t\t\t// Check if both values are numbers\n\t\t\t\t\tconst aNum = Number(a.label);\n\t\t\t\t\tconst bNum = Number(b.label);\n\t\t\t\t\tif (!isNaN(aNum) && !isNaN(bNum)) {\n\t\t\t\t\t\treturn bNum - aNum; // Reversed the order\n\t\t\t\t\t}\n\t\t\t\t\t// Otherwise sort alphabetically in reverse\n\t\t\t\t\treturn b.label.localeCompare(a.label); // Reversed the order\n\t\t\t\t});\n\t\t\t}\n\t\t\tconst choices = state.facets[facetSlug].choices;\n\t\t\t// Sort choices to put selected ones first and then by count\n\t\t\tconst sortedChoices = [...choices].sort((a, b) => {\n\t\t\t\tconst aSelected = state.facets[facetSlug].selected.includes(\n\t\t\t\t\ta.value\n\t\t\t\t);\n\t\t\t\tconst bSelected = state.facets[facetSlug].selected.includes(\n\t\t\t\t\tb.value\n\t\t\t\t);\n\t\t\t\t// First sort by selection status\n\t\t\t\tif (aSelected !== bSelected) {\n\t\t\t\t\treturn bSelected - aSelected; // Selected items come first\n\t\t\t\t}\n\t\t\t\t// Then sort by count\n\t\t\t\treturn b.count - a.count;\n\t\t\t});\n\t\t\treturn sortedChoices.slice(0, limit);\n\t\t},\n\t\tget expandedChoices() {\n\t\t\tconst context = getContext();\n\t\t\tconst { facetSlug } = context;\n\t\t\tif (!state.facets[facetSlug]) {\n\t\t\t\treturn [];\n\t\t\t}\n\t\t\tconst choices = state.facets[facetSlug].choices;\n\t\t\t// Filter out both selected choices and choices already in the main list\n\t\t\tconst filteredChoices = choices.filter((choice) => {\n\t\t\t\tconst isSelected = state.facets[facetSlug].selected.includes(\n\t\t\t\t\tchoice.value\n\t\t\t\t);\n\t\t\t\tconst isInMainList = state.choices.includes(choice);\n\t\t\t\treturn !isSelected && !isInMainList;\n\t\t\t});\n\t\t\t// Sort remaining choices by count\n\t\t\treturn filteredChoices.sort((a, b) => b.count - a.count);\n\t\t},\n\t\tget hasChoices() {\n\t\t\tconst context = getContext();\n\t\t\tconst { facetSlug } = context;\n\t\t\tconst { facets } = state;\n\t\t\treturn facets[facetSlug].choices.length > 0;\n\t\t},\n\t\tget hasSelections() {\n\t\t\tconst context = getContext();\n\t\t\tconst { facetSlug } = context;\n\t\t\tconst { facets } = state;\n\t\t\treturn facets[facetSlug].selected.length > 0;\n\t\t},\n\t\tget hasExpandedChoices() {\n\t\t\treturn state.expandedChoices && state.expandedChoices.length > 0;\n\t\t},\n\t\tget isExpanded() {\n\t\t\tconst context = getContext();\n\t\t\tconst { expanded } = context;\n\t\t\treturn expanded;\n\t\t},\n\t\t// Input Elements State:\n\t\tget isInputChecked() {\n\t\t\tconst context = getContext();\n\t\t\tconst { choice, facetSlug } = context;\n\t\t\tconst { value } = choice;\n\t\t\tconst { facets } = state;\n\t\t\treturn facets[facetSlug].selected.includes(value);\n\t\t},\n\t\tget isInputDisabled() {\n\t\t\tconst context = getContext();\n\t\t\tconst { choice } = context;\n\t\t\tconst { value, label, facetSlug } = choice;\n\t\t\tconst count = getPropertyFromObjects(\n\t\t\t\t'count',\n\t\t\t\tvalue,\n\t\t\t\tstate.facets[facetSlug].choices\n\t\t\t);\n\t\t\tif (count === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\treturn false;\n\t\t},\n\t\tget isInputError() {\n\t\t\treturn false;\n\t\t},\n\t\tget isInputSuccess() {\n\t\t\treturn false;\n\t\t},\n\t\tget isInputRequired() {\n\t\t\treturn false;\n\t\t},\n\t\tget isInputProcessing() {\n\t\t\treturn false;\n\t\t},\n\t\tget isInputHidden() {\n\t\t\treturn false;\n\t\t},\n\t\tget isInputReadOnly() {\n\t\t\treturn false;\n\t\t},\n\t\tget inputName() {\n\t\t\tconst context = getContext();\n\t\t\tconst { choice } = context;\n\t\t\treturn choice.slug;\n\t\t},\n\t\tget inputLabel() {\n\t\t\tconst context = getContext();\n\t\t\tconst { choice } = context;\n\t\t\tconst { value, label, facetSlug } = choice;\n\t\t\tconst count = getPropertyFromObjects(\n\t\t\t\t'count',\n\t\t\t\tvalue,\n\t\t\t\tstate.facets[facetSlug].choices\n\t\t\t);\n\t\t\treturn `${label} (${formatCount(count)})`;\n\t\t},\n\t\tget inputId() {\n\t\t\tconst context = getContext();\n\t\t\tconst { choice } = context;\n\t\t\tconst { slug, term_id } = choice;\n\t\t\treturn `facet_${slug}_${term_id}`;\n\t\t},\n\t\tget inputValue() {\n\t\t\tconst context = getContext();\n\t\t\tconst { choice } = context;\n\t\t\treturn choice.value;\n\t\t},\n\t\tget inputPlaceholder() {\n\t\t\tconst context = getContext();\n\t\t\tconst { placeholder, facetType, facetSlug } = context;\n\t\t\tlet _placeholder = placeholder;\n\t\t\tif (\n\t\t\t\t'dropdown' === facetType &&\n\t\t\t\tstate.facets[facetSlug].selected.length > 0\n\t\t\t) {\n\t\t\t\t// Get the first value out of selected as a string\n\t\t\t\tconst firstValue =\n\t\t\t\t\tstate.facets[facetSlug].selected[0].toString();\n\t\t\t\t_placeholder = firstValue\n\t\t\t\t\t.replace(/-/g, ' ')\n\t\t\t\t\t.replace(/\\b\\w/g, (l) => l.toUpperCase());\n\t\t\t}\n\t\t\treturn _placeholder;\n\t\t},\n\t\tget isSelected() {\n\t\t\tconst context = getContext();\n\t\t\tconst { choice } = context;\n\t\t\tconst { tokens } = state;\n\t\t\tconst { value } = choice;\n\t\t\treturn tokens.includes(value);\n\t\t},\n\t\t/**\n\t\t * For Form-Input-Select Exclusively:\n\t\t */\n\t\tget isOpen() {\n\t\t\tconst { expanded } = getContext();\n\t\t\treturn expanded;\n\t\t},\n\t\tget inputOptions() {\n\t\t\tconst context = getContext();\n\t\t\tconst { facetSlug, facetType, searchTerm } = context;\n\t\t\tconst { choices } = getServerState().facets[facetSlug];\n\t\t\tlet newChoices = choices;\n\n\t\t\t// Filter choices based on search term.\n\t\t\tif (searchTerm && searchTerm.length > 0 && choices) {\n\t\t\t\tconst filteredChoices = choices.filter((choice) =>\n\t\t\t\t\tchoice.label\n\t\t\t\t\t\t.toLowerCase()\n\t\t\t\t\t\t.includes(searchTerm.toLowerCase())\n\t\t\t\t);\n\t\t\t\tif (filteredChoices.length > 0) {\n\t\t\t\t\tnewChoices = filteredChoices;\n\t\t\t\t} else {\n\t\t\t\t\tnewChoices = choices;\n\t\t\t\t}\n\t\t\t}\n\t\t\t// Return the choices as an array of objects with the following properties:\n\t\t\t// - value: The value of the choice.\n\t\t\t// - label: The label of the choice.\n\t\t\treturn newChoices.map((choice) => {\n\t\t\t\treturn {\n\t\t\t\t\tvalue: choice.value,\n\t\t\t\t\tlabel: `${choice.label} (${formatCount(choice.count)})`,\n\t\t\t\t};\n\t\t\t});\n\t\t},\n\t\tget hasValue() {\n\t\t\tconst context = getContext();\n\t\t\tconst { facetSlug } = context;\n\t\t\tconst { selected } = state.facets[facetSlug];\n\t\t\treturn selected.length > 0;\n\t\t},\n\t\tget hasClearIcon() {\n\t\t\treturn false;\n\t\t},\n\t\tget activeIndex() {\n\t\t\tconst context = getContext();\n\t\t\tconst { activeIndex } = context;\n\t\t\treturn activeIndex || 0;\n\t\t},\n\t},\n\tactions: {\n\t\t/**\n\t\t * Construct the new url to route to by adding the selected facets to the query args.\n\t\t * @param {boolean|object} selected\n\t\t * @return\n\t\t */\n\t\tconstructNewUrl(selected = false) {\n\t\t\tconst tmp = {};\n\t\t\tif (false === selected) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Construct a comma separated string for each selected facet.\n\t\t\tObject.keys(selected).forEach((key) => {\n\t\t\t\t// If the key already has ep_ prefixed then add it directly\n\t\t\t\tif (key.startsWith(state.urlKey)) {\n\t\t\t\t\ttmp[key] = selected[key];\n\t\t\t\t} else if (Array.isArray(selected[key])) {\n\t\t\t\t\ttmp[`${state.urlKey}${key}`] = selected[key].join(',');\n\t\t\t\t} else {\n\t\t\t\t\ttmp[`${state.urlKey}${key}`] = selected[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\t// Double check tmp, if it has a key with empty value, remove it.\n\t\t\tObject.keys(tmp).forEach((key) => {\n\t\t\t\t// Check if tmp[key] is an empty string or an empty array.\n\t\t\t\t// CHeck if tmp[key] is equal to an object...\n\t\t\t\tif (tmp[key] === '' || typeof tmp[key] === 'object') {\n\t\t\t\t\tdelete tmp[key];\n\t\t\t\t}\n\t\t\t});\n\t\t\t// Remove any existing query args from the url.\n\t\t\tconst stableUrl = window.location.href.split('?')[0];\n\t\t\t// Remove any references to /page/1/ or /page/2/ etc,\n\t\t\t// we need to send the user back to the first page.\n\t\t\tconst stableUrlClean = stableUrl.replace(/\\/page\\/\\d+\\//, '/');\n\t\t\treturn addQueryArgs(stableUrlClean, tmp);\n\t\t},\n\t\t/**\n\t\t * Update the results by using the router to navigate to the new url.\n\t\t * Scroll's the user to the top of the page, gracefully.\n\t\t */\n\t\t*updateResults() {\n\t\t\tconst currentUrl = window.location.href;\n\t\t\tconst newUrl = state.getUpdatedUrl;\n\n\t\t\tif (newUrl === currentUrl) {\n\t\t\t\t// console.log(\n\t\t\t\t// \t'Facets_Context_Provider -> updateResults::',\n\t\t\t\t// \t'no change in url'\n\t\t\t\t// );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// console.log(\n\t\t\t// \t'Facets_Context_Provider -> updateResults::',\n\t\t\t// \tstate,\n\t\t\t// \tcurrentUrl,\n\t\t\t// \tnewUrl\n\t\t\t// );\n\n\t\t\tstate.isProcessing = true;\n\n\t\t\t// Process the new url. This will hit the server and return the new state.\n\t\t\tconst router = yield import('@wordpress/interactivity-router');\n\t\t\tyield router.actions.navigate(newUrl);\n\n\t\t\t// console.log(\n\t\t\t// \t'YIELD: Facets_Context_Provider <- updateResults::',\n\t\t\t// \tgetServerState(),\n\t\t\t// \tcurrentUrl,\n\t\t\t// \tnewUrl\n\t\t\t// );\n\n\t\t\t// Update local state with state from the server.\n\t\t\tconst serverState = getServerState();\n\t\t\tstate.facets = serverState.facets;\n\t\t\tstate.tokens = serverState.tokens;\n\n\t\t\t// console.log('Facets Global State Update::', state.facets);\n\n\t\t\t// Scroll to the top of the page.\n\t\t\tconst { ref } = getElement();\n\t\t\tif (ref) {\n\t\t\t\tref.scrollIntoView({\n\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t\tblock: 'start',\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\twindow.scrollTo({\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tbehavior: 'smooth',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tstate.isProcessing = false;\n\t\t},\n\t\t/**\n\t\t * Check if the newUrl is already in the prefetched array, if not add\n\t\t * it and then prefetch the newUrl.\n\t\t * @param {string} newUrl\n\t\t * @return\n\t\t */\n\t\t*prefetch(newUrl) {\n\t\t\tconst router = yield import('@wordpress/interactivity-router');\n\t\t\tif (state.prefetched.includes(newUrl)) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tstate.prefetched.push(newUrl);\n\t\t\tyield router.actions.prefetch(newUrl);\n\t\t},\n\t\t/**\n\t\t * Clear a facet or a facet value from the selected state.\n\t\t * @param {string}     facetSlug\n\t\t * @param {string|int} facetValue\n\t\t * @return\n\t\t */\n\t\tonClear: (facetSlug, facetValue = null) => {\n\t\t\t// Because onClear actions occur after routing\n\t\t\t// has occured we need to get the selected from the server state.\n\t\t\tconst currentlySelected = state.selected;\n\n\t\t\t// If there is no facetSlug then clear all selected facets and run updateResults.\n\t\t\tif (!facetSlug) {\n\t\t\t\tstate.selected = {};\n\t\t\t\tactions.updateResults();\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// If there is a facet value remove it from the given\n\t\t\t// facetSlug but keep the other selected facets.\n\t\t\tif (facetValue) {\n\t\t\t\tcurrentlySelected[facetSlug] = currentlySelected[\n\t\t\t\t\tfacetSlug\n\t\t\t\t].filter((item) => item !== facetValue);\n\t\t\t\tstate.selected = { ...currentlySelected };\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tcurrentlySelected[facetSlug] = [];\n\t\t\tstate.selected = { ...currentlySelected };\n\t\t\treturn state.selected;\n\t\t},\n\t\t/**\n\t\t * When clicking on the clear button, clear the facet from the selections.\n\t\t */\n\t\tclearFacet: () => {\n\t\t\tconst { facetSlug } = getContext();\n\t\t\tactions.onClear(facetSlug);\n\t\t},\n\t\t*onInputMouseEnter() {\n\t\t\tconst context = getContext();\n\t\t\tconst { facetSlug, value, selected } = context;\n\t\t\tconst currentSelected = selected || [];\n\t\t\tconst nextSelected = { ...currentSelected, [value]: value };\n\t\t\tconst nextUrl = actions.constructNewUrl(nextSelected);\n\t\t\t// Prefetch the possible next url.\n\t\t\tyield actions.prefetch(nextUrl);\n\t\t},\n\t\tonInputMouseLeave: withSyncEvent((event) => {\n\t\t\t// console.log('onInputMouseLeave', event);\n\t\t}),\n\t\tonInputFocus: withSyncEvent((event) => {\n\t\t\tconst context = getContext();\n\t\t\tconst { facetType } = context;\n\t\t\tif ('dropdown' === facetType) {\n\t\t\t\tcontext.expanded = !context.expanded;\n\t\t\t}\n\t\t}),\n\t\tonInputBlur: withSyncEvent((event) => {\n\t\t\t// By default this runs on the on-blur directive on the input element\n\t\t\t// but we also use it as a shortcut to close the listbox on click,\n\n\t\t\t// Because the on-blur event fires before the click event\n\t\t\t// we need to slow things down a bit, 150 ms should do it...\n\t\t\tlet isRunning = false;\n\t\t\tif (!isRunning) {\n\t\t\t\tisRunning = true;\n\t\t\t\tconst context = getContext();\n\t\t\t\tconst { facetType } = context;\n\t\t\t\tif ('dropdown' === facetType) {\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tcontext.expanded = false;\n\t\t\t\t\t\tisRunning = false;\n\t\t\t\t\t}, 150);\n\t\t\t\t}\n\t\t\t}\n\t\t}),\n\t\tonInputKeyDown: withSyncEvent((event) => {\n\t\t\tevent.preventDefault();\n\t\t\tconst context = getContext();\n\t\t\tif ('dropdown' !== context.facetType) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event.key === 'Enter') {\n\t\t\t\tconst { activeIndex, facetSlug } = context;\n\t\t\t\tconst { inputOptions, selected } = state;\n\t\t\t\tconst { value } = inputOptions[activeIndex];\n\n\t\t\t\tselected[facetSlug] = [value];\n\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tcontext.expanded = false;\n\t\t\t\t}, 150);\n\t\t\t}\n\t\t}),\n\t\tonInputKeyUp: withSyncEvent((event) => {\n\t\t\tconst context = getContext();\n\t\t\tconst { expanded, facetType } = context;\n\t\t\tif ('dropdown' !== facetType) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// Update the search term.\n\t\t\tcontext.searchTerm = event.target.value;\n\n\t\t\tif (!expanded) {\n\t\t\t\tcontext.expanded = true;\n\t\t\t}\n\t\t\tif (event.keyCode === 40 && event.key === 'ArrowDown') {\n\t\t\t\tactions.moveThroughChoices(1, event.target);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (event.keyCode === 38 && event.key === 'ArrowUp') {\n\t\t\t\tactions.moveThroughChoices(-1, event.target);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// if escape key, close the listbox\n\t\t\tif (event.key === 'Escape') {\n\t\t\t\tcontext.expanded = false;\n\t\t\t}\n\t\t}),\n\t\tonDropdownArrowClick: withSyncEvent((event) => {\n\t\t\tconst context = getContext();\n\t\t\tconst { facetType } = context;\n\t\t\tif ('dropdown' === facetType) {\n\t\t\t\tcontext.expanded = !context.expanded;\n\t\t\t}\n\t\t}),\n\t\tmoveThroughChoices: (direction, ref) => {\n\t\t\tconst { inputOptions } = state;\n\t\t\tconst { activeIndex } = getContext();\n\n\t\t\t// Determine next active index.\n\t\t\tlet nextActive = null;\n\t\t\tif (activeIndex === null || isNaN(activeIndex)) {\n\t\t\t\tnextActive = 0;\n\t\t\t} else {\n\t\t\t\tnextActive = activeIndex + direction;\n\t\t\t}\n\t\t\tif (nextActive < 0) {\n\t\t\t\tnextActive = inputOptions.length - 1;\n\t\t\t}\n\t\t\tif (nextActive >= inputOptions.length) {\n\t\t\t\tnextActive = 0;\n\t\t\t}\n\n\t\t\t// Get the next active value.\n\t\t\tconst nextActiveValue = inputOptions[nextActive].value;\n\t\t\t// And then scroll the listbox to the active item.\n\t\t\tconst listbox = ref.parentElement.parentElement.querySelector(\n\t\t\t\t'.wp-block-prc-block-form-input-select__list'\n\t\t\t);\n\t\t\tconst activeItem = listbox.querySelector(\n\t\t\t\t`[data-ref-value=\"${nextActiveValue}\"]`\n\t\t\t);\n\t\t\tif (activeItem) {\n\t\t\t\t// Remove the active class from the previous active item.\n\t\t\t\tconst previousActive = listbox.querySelector('.is-selected');\n\t\t\t\tif (previousActive) {\n\t\t\t\t\tpreviousActive.classList.remove('is-selected');\n\t\t\t\t}\n\t\t\t\tactiveItem.classList.add('is-selected');\n\t\t\t\tactiveItem.scrollIntoView({\n\t\t\t\t\tblock: 'nearest',\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tgetContext().activeIndex = nextActive;\n\t\t},\n\t\tonInputOptionClick: withSyncEvent((event) => {\n\t\t\tconst context = getContext();\n\t\t\tconst { facetSlug, choice } = context;\n\t\t\tconst { selected } = state;\n\t\t\tconst { value } = choice;\n\t\t\tselected[facetSlug] = [value];\n\t\t}),\n\t\tonInputCheckboxClick: withSyncEvent((event) => {\n\t\t\tconst context = getContext();\n\t\t\tconst { choice, facetSlug } = context;\n\t\t\tconst { selected } = state;\n\t\t\tconst { value, type } = choice;\n\t\t\tif (state.isInputDisabled) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (!selected[facetSlug] || selected[facetSlug].length === 0) {\n\t\t\t\tselected[facetSlug] = [value];\n\t\t\t} else if (selected[facetSlug].includes(value)) {\n\t\t\t\tselected[facetSlug] = selected[facetSlug].filter(\n\t\t\t\t\t(item) => item !== value\n\t\t\t\t);\n\t\t\t} else if ('radio' === type) {\n\t\t\t\tselected[facetSlug] = [value];\n\t\t\t} else {\n\t\t\t\tselected[facetSlug] = [...selected[facetSlug], value];\n\t\t\t}\n\t\t}),\n\t\t/**\n\t\t * When clicking on the facet expanded button, toggle the expanded state.\n\t\t */\n\t\tonExpand: () => {\n\t\t\tconst context = getContext();\n\t\t\tcontext.expanded = !context.expanded;\n\t\t},\n\t\tonCollapse: () => {\n\t\t\t// By default this runs on the on-blur directive on the input element\n\t\t\t// but we also use it as a shortcut to close the listbox on click,\n\t\t\t// Because the on-blur event fires before the click event\n\t\t\t// we need to slow things down a bit, 150 ms should do it...\n\t\t\tconst context = getContext();\n\t\t\tlet isRunning = false;\n\t\t\tif (!isRunning) {\n\t\t\t\tisRunning = true;\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tcontext.expanded = false;\n\t\t\t\t\tisRunning = false;\n\t\t\t\t}, 150);\n\t\t\t}\n\t\t},\n\t},\n\tcallbacks: {\n\t\t/**\n\t\t * When a facet is selected, we need to update the results.\n\t\t */\n\t\tonSelection() {\n\t\t\tconst selected = state.selected;\n\t\t\tconst keysLength = Object.keys(selected).length;\n\t\t\t// No selections? Disable updates.\n\t\t\tif (keysLength <= 0) {\n\t\t\t\t// console.log(\n\t\t\t\t// \t'Facets_Context_Provider -> onSelection:: FALSE NO SELECTIONS'\n\t\t\t\t// );\n\t\t\t\tstate.isDisabled = true;\n\t\t\t} else {\n\t\t\t\t// Once we have some selections, lets run a refresh.\n\t\t\t\t// console.log('Facets_Context_Provider -> onSelection::', state);\n\t\t\t\tactions.updateResults();\n\t\t\t\tstate.isDisabled = false;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * When the epSortByDate flag is toggled on add ep_sort__by_date\n\t\t * to selected and run updateResults. This will hit the server\n\t\t * and return the new post list sorted by date.\n\t\t */\n\t\tonEpSortByUpdate() {\n\t\t\t// if epSortByDate is true then add to selected 'ep_sort__by_date' and run updateResults\n\t\t\tif (state.epSortByDate) {\n\t\t\t\tstate.selected.ep_sort__by_date = true;\n\t\t\t} else {\n\t\t\t\tdelete state.selected.ep_sort__by_date;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * When the facet is expanded, update the label to be either More or Less.\n\t\t */\n\t\tonExpand: () => {\n\t\t\tconst context = getContext();\n\t\t\tconst { expanded } = context;\n\t\t\tif (expanded) {\n\t\t\t\tcontext.expandedLabel = '- Less';\n\t\t\t} else {\n\t\t\t\tcontext.expandedLabel = '+ More';\n\t\t\t}\n\t\t},\n\t},\n});\n"],"names":["module","exports","import","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","addQueryArgs","window","wp","url","formatCount","count","getPropertyFromObjects","property","searchValue","values","choice","find","c","value","state","actions","store","mouseEnterPreFetchTimer","navigateTimer","epSortByDate","isProcessing","hasPosts","pagination","total_rows","postCount","getServerSelected","getServerState","selected","getUpdatedUrl","constructNewUrl","choices","context","getContext","facetSlug","limit","facetType","facets","sort","a","b","aNum","Number","label","bNum","isNaN","localeCompare","aSelected","includes","bSelected","slice","expandedChoices","filter","isSelected","isInMainList","hasChoices","length","hasSelections","hasExpandedChoices","isExpanded","expanded","isInputChecked","isInputDisabled","isInputError","isInputSuccess","isInputRequired","isInputProcessing","isInputHidden","isInputReadOnly","inputName","slug","inputLabel","inputId","term_id","inputValue","inputPlaceholder","placeholder","_placeholder","toString","replace","l","toUpperCase","tokens","isOpen","inputOptions","searchTerm","newChoices","filteredChoices","toLowerCase","map","hasValue","hasClearIcon","activeIndex","tmp","Object","keys","forEach","key","startsWith","urlKey","Array","isArray","join","stableUrlClean","location","href","split","updateResults","currentUrl","newUrl","router","navigate","serverState","ref","getElement","scrollIntoView","behavior","block","scrollTo","top","prefetch","prefetched","push","onClear","facetValue","currentlySelected","item","clearFacet","onInputMouseEnter","nextSelected","nextUrl","onInputMouseLeave","withSyncEvent","event","onInputFocus","onInputBlur","isRunning","setTimeout","onInputKeyDown","preventDefault","onInputKeyUp","target","keyCode","moveThroughChoices","onDropdownArrowClick","direction","nextActive","nextActiveValue","listbox","parentElement","querySelector","activeItem","previousActive","classList","remove","add","onInputOptionClick","onInputCheckboxClick","type","onExpand","onCollapse","callbacks","onSelection","isDisabled","onEpSortByUpdate","ep_sort__by_date","expandedLabel"],"sourceRoot":""}